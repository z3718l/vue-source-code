{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 判断当前数据是不是对象\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null\n}","// 把data中的数据 都使用Object.defineProperty重新定义\n// Object.defineProperty 兼容性不好，不能兼容ie8及以下\nimport { isObject } from '../util/index'\nclass Observer {\n    constructor(value) {\n        // vue如果数据的层级过多，需要递归的去解析对象中的属性，依次增加set和get方法\n        // proxy不需要一上来就进行递归，也不需要添加set和get方法，所以性能会有所提高\n        this.walk(value);\n    }\n    walk(data) {\n        // 拿到用户传的对象数据 data => {name: 'zhangsan',age: 12}\n        let keys = Object.keys(data); // [name, age]\n        // for(let i = 0; i < keys.length; i ++) {\n        //     let key = keys[i]; // key => name age(循环之后)\n        //     let value = data[key]; // value => 'zhangsan' 12(循环之后)\n        //     defineReactive(data, key, value); // 定义响应式数据\n        // }\n        // 优化for循环\n        keys.forEach((key) => {\n            defineReactive(data, key, data[key]);\n        })\n    }\n}\n\nfunction defineReactive(data, key, value) {\n    // 使用defineProperty进行数据响应\n    // 用户进行获取值、设置值得话就会在这里进行拦截\n    observe(value); // 递归调用，如果value还是一个对象，就再走一遍new Observer（递归实现深度检测）\n    // 添加了这个递归方法，无论是几层嵌套，都能把对象监测到\n    Object.defineProperty(data, key, {\n        get() {\n            return value\n        },\n        set(newValue) {\n            if(newValue === value) return;\n            observe(value); // 如果用户设置的是一个对象，继续进行劫持\n            value = newValue\n        }\n    })\n}\n\nexport function observe(data) {\n    let isObj = isObject(data)\n    if(!isObj) {\n        return;\n    }\n    new Observer(data); // 用来观测数据\n}","import { observe } from './observe/index.js'\nexport function initState(vm) {\n    const opts = vm.$options;\n    // vue的数据来源，属性 方法 数据 计算属性 watch\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethods(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\nfunction initProps() {}\nfunction initMethods() {}\nfunction initData(vm) {\n    // 数据初始化工作\n    let data = vm.$options.data; // 用户传递的数据\n    /**\n     * vm._data:为了用户可以方便拿到数据\n     * 如果data是一个函数，就直接执行函数，并且把函数的this指向vm（vue的实例）\n     * 如果不是函数，直接等于data\n     */\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n\n    /**\n     * 对象劫持 用户改变了数据，我们希望可以得到通知 ==》并且刷新页面数据\n     * MVVM模式 数据变化了可以驱动视图变化\n     * Object.defineProperty() 给属性增加get方法和set方法\n     */\n    observe(data); // 响应式原理\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","// 在原型上添加init方法\nimport { initState} from './state.js'\nexport function initMixin(Vue) {\n\t// vue初始化流程\n  Vue.prototype._init = function(options) {\n\t\t// 1、数据的劫持\n\t\tconst vm = this;\n\t\tvm.$options = options;\n\t\tinitState(vm)\n\t}\n}","// 这里就是vue的核心代码\n// 这个文件只是vue的一个声明，不做具体的操作\n// 由于vue的方法比较多，我们会把他们写在原型上，方便调用\nimport { initMixin } from './init.js'\nfunction Vue(options) {\n    // options接收vue实例中的所有方法和配置\n    // 在这里进行vue的初始化操作\n    // console.log(options);\n    this._init(options)\n}\n// 通过引入的方式，给原型上添加方法\ninitMixin(Vue)\nexport default Vue"],"names":["isObject","data","Observer","value","walk","keys","Object","forEach","key","defineReactive","observe","defineProperty","get","set","newValue","isObj","initState","vm","opts","$options","props","methods","initData","computed","watch","_data","call","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACO,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;EAC3B,SAAO,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAA5C;EACH;;MCAKC;EACF,oBAAYC,KAAZ,EAAmB;EAAA;;EACf;EACA;EACA,SAAKC,IAAL,CAAUD,KAAV;EACH;;;;2BACIF,MAAM;EACP;EACA,UAAII,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYJ,IAAZ,CAAX,CAFO;EAGP;EACA;EACA;EACA;EACA;EACA;;EACAI,MAAAA,IAAI,CAACE,OAAL,CAAa,UAACC,GAAD,EAAS;EAClBC,QAAAA,cAAc,CAACR,IAAD,EAAOO,GAAP,EAAYP,IAAI,CAACO,GAAD,CAAhB,CAAd;EACH,OAFD;EAGH;;;;;;EAGL,SAASC,cAAT,CAAwBR,IAAxB,EAA8BO,GAA9B,EAAmCL,KAAnC,EAA0C;EACtC;EACA;EACAO,EAAAA,OAAO,CAACP,KAAD,CAAP,CAHsC;EAItC;;EACAG,EAAAA,MAAM,CAACK,cAAP,CAAsBV,IAAtB,EAA4BO,GAA5B,EAAiC;EAC7BI,IAAAA,GAD6B,iBACvB;EACF,aAAOT,KAAP;EACH,KAH4B;EAI7BU,IAAAA,GAJ6B,eAIzBC,QAJyB,EAIf;EACV,UAAGA,QAAQ,KAAKX,KAAhB,EAAuB;EACvBO,MAAAA,OAAO,CAACP,KAAD,CAAP,CAFU;;EAGVA,MAAAA,KAAK,GAAGW,QAAR;EACH;EAR4B,GAAjC;EAUH;;EAEM,SAASJ,OAAT,CAAiBT,IAAjB,EAAuB;EAC1B,MAAIc,KAAK,GAAGf,QAAQ,CAACC,IAAD,CAApB;;EACA,MAAG,CAACc,KAAJ,EAAW;EACP;EACH;;EACD,MAAIb,QAAJ,CAAaD,IAAb,EAL0B;EAM7B;;EC9CM,SAASe,SAAT,CAAmBC,EAAnB,EAAuB;EAC1B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB,CAD0B;;EAG1B,MAAID,IAAI,CAACE,KAAT,EAAgB;;EAGhB,MAAIF,IAAI,CAACG,OAAT,EAAkB;;EAGlB,MAAIH,IAAI,CAACjB,IAAT,EAAe;EACXqB,IAAAA,QAAQ,CAACL,EAAD,CAAR;EACH;;EACD,MAAIC,IAAI,CAACK,QAAT,EAAmB;;EAGnB,MAAIL,IAAI,CAACM,KAAT,EAAgB;EAGnB;;EAGD,SAASF,QAAT,CAAkBL,EAAlB,EAAsB;EAClB;EACA,MAAIhB,IAAI,GAAGgB,EAAE,CAACE,QAAH,CAAYlB,IAAvB,CAFkB;;EAGlB;;;;;;EAKAA,EAAAA,IAAI,GAAGgB,EAAE,CAACQ,KAAH,GAAW,OAAOxB,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACyB,IAAL,CAAUT,EAAV,CAA7B,GAA6ChB,IAA/D;EAEA;;;;;;EAKAS,EAAAA,OAAO,CAACT,IAAD,CAAP,CAfkB;EAgBrB;;ECtCD;EAEO,SAAS0B,SAAT,CAAmBC,GAAnB,EAAwB;EAC9B;EACCA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAASC,OAAT,EAAkB;EACxC;EACA,QAAMd,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAACE,QAAH,GAAcY,OAAd;EACAf,IAAAA,SAAS,CAACC,EAAD,CAAT;EACA,GALA;EAMD;;ECVD;;EAIA,SAASW,GAAT,CAAaG,OAAb,EAAsB;EAClB;EACA;EACA;EACA,OAAKD,KAAL,CAAWC,OAAX;EACH;;;EAEDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}