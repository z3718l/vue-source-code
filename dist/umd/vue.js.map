{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 判断当前数据是不是对象\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null\n}\n\nexport function def(data, key, value) {\n    Object.defineProperty(data, key, {\n        enumerable: false,\n        configurable: false,\n        value\n    })\n}","\n// 我们要重写数组的方法，一般是7个方法\n/**\n * push shift unshift pop reverse sort splice\n * 这些方法会导致数组本身发生变化，不会改变原数组的不需要重写\n */\nlet oldArrayMethods = Array.prototype;\nexport const arrayMethods = Object.create(oldArrayMethods);\nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'reverse',\n    'sort',\n    'splice'\n]\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        console.log('调用了push')\n        const result = oldArrayMethods[method].apply(this, args); // 再调用原生的方法\n\n        // push unshift添加的元素可能还是一个对象，所以还要对这些对象进行监控\n        let inserted; // 当前用户插入的元素\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n            default:\n                break;\n        }\n\n        if (inserted) {\n            // 将新增属性继续观测\n            ob.observerArray(inserted);\n        }\n\n        return result;\n    }\n})\n","// 把data中的数据 都使用Object.defineProperty重新定义\n// Object.defineProperty 兼容性不好，不能兼容ie8及以下\nimport { isObject, def } from '../util/index'\nimport { arrayMethods } from './array.js'\nclass Observer {\n    constructor(value) {\n        // vue如果数据的层级过多，需要递归的去解析对象中的属性，依次增加set和get方法\n        // proxy不需要一上来就进行递归，也不需要添加set和get方法，所以性能会有所提高\n        // console.log(value, '=====')\n        /**\n         * 如果在这里不对数组进行处理，这里会对数组的索引监控，这样如果数组比较大的话，就会造成性能问题，所以我们会对数组方法进行重写\n         */\n        // value.__ob__ = this; // 给每一个监控过的对象都增加一个__ob__属性（作用：表示这个对象已经被监控）\n        def(value, '__ob__', this);\n        if (Array.isArray(value)) {\n            // 如果是数组的话，不会对数组的索引进行监控\n            // 对数组进行监控\n            // 前端开发中，一般很少直接去操作索引，一般都是使用push unshift shift\n            // 如果数组里面放的是对象，在进行监控\n            value.__proto__ = arrayMethods;\n            this.observerArray(value);\n        } else {\n            // 对对象进行监控\n            this.walk(value);\n        }\n    }\n    observerArray(value) { // [{}]\n        for(let i = 0; i < value.length; i ++) {\n            observe(value[i]);\n        }\n    }\n    walk(data) {\n        // 拿到用户传的对象数据 data => {name: 'zhangsan',age: 12}\n        let keys = Object.keys(data); // [name, age]\n        // for(let i = 0; i < keys.length; i ++) {\n        //     let key = keys[i]; // key => name age(循环之后)\n        //     let value = data[key]; // value => 'zhangsan' 12(循环之后)\n        //     defineReactive(data, key, value); // 定义响应式数据\n        // }\n        // 优化for循环\n        keys.forEach((key) => {\n            defineReactive(data, key, data[key]);\n        })\n    }\n}\n\nfunction defineReactive(data, key, value) {\n    // 使用defineProperty进行数据响应\n    // 用户进行获取值、设置值得话就会在这里进行拦截\n    observe(value); // 递归调用，如果value还是一个对象，就再走一遍new Observer（递归实现深度检测）\n    // 添加了这个递归方法，无论是几层嵌套，都能把对象监测到\n    Object.defineProperty(data, key, {\n        get() {\n            return value\n        },\n        set(newValue) {\n            if(newValue === value) return;\n            observe(value); // 如果用户设置的是一个对象，继续进行劫持\n            value = newValue\n        }\n    })\n}\n\nexport function observe(data) {\n    let isObj = isObject(data)\n    if(!isObj) {\n        return;\n    }\n    new Observer(data); // 用来观测数据\n}","import { observe } from './observe/index.js'\nexport function initState(vm) {\n    const opts = vm.$options;\n    // vue的数据来源，属性 方法 数据 计算属性 watch\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethods(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\nfunction initProps() {}\nfunction initMethods() {}\nfunction initData(vm) {\n    // 数据初始化工作\n    let data = vm.$options.data; // 用户传递的数据\n    /**\n     * vm._data:为了用户可以方便拿到数据\n     * 如果data是一个函数，就直接执行函数，并且把函数的this指向vm（vue的实例）\n     * 如果不是函数，直接等于data\n     */\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n\n    /**\n     * 对象劫持 用户改变了数据，我们希望可以得到通知 ==》并且刷新页面数据\n     * MVVM模式 数据变化了可以驱动视图变化\n     * Object.defineProperty() 给属性增加get方法和set方法\n     */\n    observe(data); // 响应式原理\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","// ?: 匹配不捕获\n// arguments[0] = 匹配到的标签   arguments[1] = 匹配到的标签名字\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;   // 匹配 abc-aaa (标签)\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:bb>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的 <div id=\"\"></div>\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nexport function parseHTML(html) {\n  // 创建ast节点\n  function createASTElement(tagName, attrs) {\n    return {\n      tag: tagName, // 标签名\n      type: 1, // 元素类型\n      children: [], // 孩子列表\n      attrs, // 属性集合\n      parent: null // 父级\n    }\n  }\n  // 处理开始标签\n  let root;\n  let currentParent;\n  let stack = [];\n  /**\n   * 验证标签是否合法\n   * 思路：使用栈 每截取一个标签，放入栈中，如果结束了，拿出栈中最后一个进行比较，\n   * 如果相同，则表示标签合法，否则不合法，也就是出现这样的标签嵌套<div><p><span></p></div>\n   * [div, p, span]\n   */\n  function start(tagName, attrs) {\n    // console.log(tagName, attrs, '======开始标签======')\n    let element = createASTElement(tagName, attrs)\n    if (!root) {\n      root = element\n    }\n    currentParent = element; // 当前解析的标签 保存起来\n    // 拿到的是开始的标签\n    stack.push(element); // 将生产的ast元素放入栈中，因为标签名是没有parent属性的\n  }\n  function chars(text) {\n    // console.log(text, '======文本标签======')\n    text = text.replace(/\\s/g, ''); // 正则匹配 将空格全部去掉\n    if (text) { // 如果去掉空格，text不为空\n      currentParent.children.push({\n        type: 3,\n        text\n      })\n    }\n  }\n  function end(tagName) { // 在结尾标签处 创建父子关系\n    // console.log(tagName, '======结束标签======')\n    // 结束的时候，将栈中最后一个拿出来，进行比较\n    let element = stack.pop(); // 取出栈中最后一个\n    currentParent = stack[stack.length - 1];\n    if (currentParent){ // 在闭合时可以知道这个标签的父亲是谁\n      element.parent = currentParent;\n      currentParent.children.push(element);\n    }\n  }\n\n  // 不停的去解析html字符串\n  while (html) {\n    let textEnd = html.indexOf('<');\n    if (textEnd === 0) {\n      // 如果返回值为0，说明肯定是有一个标签：开始标签 结束标签\n      let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果  tagName attrs\n      if (startTagMatch) {\n        // console.log(startTagMatch) // 匹配到开始标签\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue; // 如果开始标签匹配完毕后，继续下一次匹配\n      }\n      let endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]);\n        continue; // 继续匹配\n      }\n    }\n    let text;\n    if (textEnd >= 0) { // 是文本\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      advance(text.length);\n      chars(text);\n      // break;\n    }\n  }\n  function advance(n) { // 截取匹配到的字符串\n    html = html.substring(n)\n  }\n  function parseStartTag() {\n    let start = html.match(startTagOpen);\n    if (start) {\n      // console.log(start, '=====')\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      advance(start[0].length); // 将匹配到的标签删除\n      // console.log(html); // 这里的html应该就变少了\n      let end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) { // 匹配标签上是否有属性\n        // 将属性进行解析\n        advance(attr[0].length); //将属性去掉\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5]\n        })\n      }\n      if (end) { // 去掉开始标签 >\n        advance(end[0].length);\n        return match\n      }\n    }\n  }\n\n  return root;\n}","/**\n * 预期：<div id=\"app\" style=\"color: red\"> hello {{ name}} <span>hello</span> </div>\n * \n * ==>\n * _c：创建元素（等价react中的createElement）\n * _v：创建文本节点\n * _s：JSON.stringfy的字符串\n * 通过generate函数，将传入的模板变成render函数\n * 结果：render() {\n *  return _c('div', { id: 'app', style: { color: 'red' }}, _v('Hello' + _s(name)), _c('span', null, _v('Hello')))\n * }\n */\n// 语法层面的转义\nfunction genProps(attrs) { // 处理属性  \n  // console.log(attrs)\n  let str = '';\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    if (attr.name === 'style') { // 对样式进行特殊处理\n      let obj = {}\n      attr.value.split(';').forEach(item => {\n        let [key,value] = item.split(':');\n        obj[key] = value;\n      })\n      attr.value = obj;\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)}`;\n  }\n  return `{${str.slice(0, -1)}}`; // 处理掉最后一个,\n}\nfunction gen(node) { // 判断node的nodetype\n  if (node.type === 1) { // 元素类型\n    return generate(node); // 生成元素节点的字符串\n  } else { // 如果是文本\n    let text = node.text; // 获取文本\n    // 如果是普通文本 不带{{}}\n    return `_v(${JSON.stringify(text)})`\n  }\n}\nfunction  genChildren(el) { // 处理孩子元素\n  const children = el.children;\n  if (children) { // 如果有孩子元素\n    return children.map(child => gen(child)).join(',');\n  }\n}\nexport function generate(el) {\n  // console.log(el)\n  let children = genChildren(el); // 获取孩子元素\n  let code = `_c('${el.tag}', ${el.attrs.length?`${genProps(el.attrs)}`: 'undefined'}${\n    children?`,${children}`:''\n  })`;\n\n  return code;\n}","// ast语法树 是用对象来描述原生语法的 \n// 虚拟Dom 用过对象来面试dom节点\nimport { parseHTML } from './parse.js'\nimport { generate } from './generate.js'\n\n\n\n\nexport function compileToFunction(template) {\n  // 将html模板 =》render函数\n  /**\n   * 1、需要将会html代码转化成'AST'语法树 可以用ast树来描述语言本身\n   * \n   * 2、静态优化（不是重点 可自行查看）\n   * \n   * 3、通过这个树结构 重新生成代码\n   */\n  // 1）\n  let root = parseHTML(template); // 将html结构解析成语法树\n  // 2）vue中的优化静态节点\n  // console.log(root)\n  let code = generate(root)\n  console.log(code)\n  return function render() {\n    // 3）\n    \n  }\n}\n\n\n// 生成的render函数\n/**\n * <div id=\"app\" style=\"color: red\"> hello {{ name}} <span>hello</span> </div>\n * \n * ==>\n * _c：创建元素（等价react中的createElement）\n * _v：创建文本节点\n * _s：JSON.stringfy的字符串\n * 通过generate函数，将传入的ast变成render函数\n * render() {\n *  return _c('div', { id: 'app', style: { color: 'red' }}, _v('Hello' + _s(name)), _c('span', null, _v('Hello')))\n * }\n */\n\n\n// 模板解析就是使用正则对字符串进行匹配和截取\n/**\n * <div id=\"app\">\n *  <p>hello</p>\n * </div>\n * \n * 用ast语法树表达上面的html\n * \n * let root = {\n *  tag: 'div',\n *  attrs: [{name: 'id, value: 'app'}]\n *  parent: null,\n *  type: 1,\n *  children[{\n *    tag: 'p',\n *    attrs: [],\n *    parent: root,\n *    type: 1,\n *    children: [{\n *      text: 'hello',\n *      type: 3\n *    }]\n *  }]\n * }\n */","// 在原型上添加init方法\nimport { initState} from './state.js'\nimport { compileToFunction } from './compiler/index.js'\nexport function initMixin(Vue) {\n\t// vue初始化流程\n  Vue.prototype._init = function(options) {\n\t\t// 1、数据的劫持\n\t\tconst vm = this;\n\t\tvm.$options = options;\n\t\t// 初始化状态\n\t\tinitState(vm);\n\n\t\t// 如果用户传入了el属性，需要将页面渲染出来 并且要实现挂载流程\n\t\tif (vm.$options.el) {\n\t\t\tvm.$mount(vm.$options.el);\n\t\t}\n\t}\n\tVue.prototype.$mount = function(el) {\n\t\t// console.log(el)\n\t\tconst vm = this;\n\t\tconst options = vm.$options;\n\t\tel = document.querySelector(el);\n\t\t// 默认先会查找有没有render方法，没有render会采用template、如果template也没有，就要el中的内容\n\t\tif (!options.render) {\n\t\t\t// 如果不是render才会进行编译，如果是render函数 就不需要编译了；所以写render函数会提升vue的性能\n\t\t\tlet template = options.template;\n\t\t\tif (!template && el) {\n\t\t\t\ttemplate = el.outerHTML;\n\t\t\t}\n\t\t\t// console.log(template, '===template')\n\t\t\tconst render = compileToFunction(template);\n\t\t\toptions.render = render; // 方便后续使用render方法\n\t\t\t// 需要将template转化成render方法 也就是将标签解析成ast语法树 \n\t\t}\n\t}\n}","// 这里就是vue的核心代码\n// 这个文件只是vue的一个声明，不做具体的操作\n// 由于vue的方法比较多，我们会把他们写在原型上，方便调用\nimport { initMixin } from './init.js'\nfunction Vue(options) {\n    // options接收vue实例中的所有方法和配置\n    // 在这里进行vue的初始化操作\n    // console.log(options);\n    this._init(options)\n}\n// 通过引入的方式，给原型上添加方法\ninitMixin(Vue)\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","args","result","apply","inserted","ob","__ob__","slice","observerArray","Observer","isArray","__proto__","walk","i","length","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","tagName","attrs","tag","type","children","parent","root","currentParent","stack","start","element","push","chars","text","replace","end","pop","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","genProps","str","obj","split","item","JSON","stringify","gen","node","generate","genChildren","el","map","child","join","code","compileToFunction","template","render","initMixin","Vue","_init","options","$mount","document","querySelector","outerHTML"],"mappings":"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"}